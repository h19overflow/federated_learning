@startuml Federated Learning Architecture
skinparam linetype ortho
skinparam nodesep 130
skinparam ranksep 120

package "Server Layer" {
  component [ServerApp] as SA
  component [CustomFedAvg\nStrategy] as CFAS
  component [Grid\nCommunication] as GRID
}

package "Client Communication" {
  component [ClientApp] as CA
  component [Message] as MSG
  component [Context] as CTX
}

package "Data Processing Layer" {
  component [CSV Dataset] as CSV
  component [CustomPartitioner] as PART
  component [XRayDataModule] as DM
}

package "Model Training Layer" {
  component [CentralizedTrainer] as CT
  component [LitResNet\nModel] as MODEL
  component [PyTorch Lightning\nTrainer] as PLT
}

package "Metrics & Monitoring" {
  component [MetricsCollector] as MC
  component [Callbacks\nCheckpointing] as CB
  component [Metrics Output\nJSON] as MOUT
}

' Server connections
SA --> CFAS
CFAS --> GRID

' Grid to Client
GRID --> CA

' Client App receives message
CA --> MSG
MSG --> CTX

' Config extraction
MSG --> CSV

' Data Processing Flow
CSV --> PART
PART --> DM

' Training Setup
CT --> MODEL
CT --> PLT
CT --> CB

' Data to Trainer
DM --> PLT
PLT --> MODEL

' Model to Metrics
MODEL --> MC
CB --> MODEL
MC --> MOUT

' Results back to Client
MC --> CA
MODEL --> CA

' Client sends response
CA --> MSG

@enduml
