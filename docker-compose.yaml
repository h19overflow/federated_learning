services:
  db:
    image: pgvector/pgvector:pg16
    restart: always
    environment:
      POSTGRES_DB: federated_pneumonia_detection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5123:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgrest:
    image: postgrest/postgrest
    restart: always
    environment:
      PGRST_DB_URI: "postgresql://postgres:postgres@db:5432/federated_pneumonia_detection"
      PGRST_DB_SCHEMA: "public"
      PGRST_DB_ANON_ROLE: "postgres"
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/federated_pneumonia_detection"
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    depends_on:
      db:
        condition: service_healthy
    command: python app.py

volumes:
  db_data:
